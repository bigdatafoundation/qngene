/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.bdgenomics.formats.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Feature extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Feature\",\"namespace\":\"org.bdgenomics.formats.avro\",\"fields\":[{\"name\":\"featureId\",\"type\":[\"null\",\"string\"],\"doc\":\"Preferably unique ID for this Feature object\",\"default\":null},{\"name\":\"featureType\",\"type\":[\"null\",\"string\"],\"doc\":\"The type of feature this is (aka, \\\"track\\\").\\n\\n   Examples are \\\"conservation\\\", \\\"centipede\\\", \\\"gene\\\"\",\"default\":null},{\"name\":\"source\",\"type\":[\"null\",\"string\"],\"doc\":\"The original source for this feature.\\n\\n   Path/filename/URL and/or the file type (e.g., BED, GFF, etc.)\",\"default\":null},{\"name\":\"contig\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Contig\",\"doc\":\"Record for describing a reference assembly. Not used for storing the contents\\n of said assembly.\\n\\n @see NucleotideContigFragment\",\"fields\":[{\"name\":\"contigName\",\"type\":[\"null\",\"string\"],\"doc\":\"The name of this contig in the assembly (e.g., \\\"chr1\\\").\",\"default\":null},{\"name\":\"contigLength\",\"type\":[\"null\",\"long\"],\"doc\":\"The length of this contig.\",\"default\":null},{\"name\":\"contigMD5\",\"type\":[\"null\",\"string\"],\"doc\":\"The MD5 checksum of the assembly for this contig.\",\"default\":null},{\"name\":\"referenceURL\",\"type\":[\"null\",\"string\"],\"doc\":\"The URL at which this reference assembly can be found.\",\"default\":null},{\"name\":\"assembly\",\"type\":[\"null\",\"string\"],\"doc\":\"The name of this assembly (e.g., \\\"hg19\\\").\",\"default\":null},{\"name\":\"species\",\"type\":[\"null\",\"string\"],\"doc\":\"The species that this assembly is for.\",\"default\":null},{\"name\":\"referenceIndex\",\"type\":[\"null\",\"int\"],\"doc\":\"Optional 0-based index of this contig in a SAM file header that it was read\\n   from; helps output SAMs/BAMs with headers in the same order as they started\\n   with, before a conversion to ADAM.\",\"default\":null}]}],\"doc\":\"The contig this feature is located on\",\"default\":null},{\"name\":\"start\",\"type\":[\"null\",\"long\"],\"doc\":\"Start coordinate on the contig\",\"default\":null},{\"name\":\"end\",\"type\":[\"null\",\"long\"],\"doc\":\"End coordinate on the contig\",\"default\":null},{\"name\":\"strand\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Strand\",\"symbols\":[\"Forward\",\"Reverse\",\"Independent\"]}],\"doc\":\"Strand information for this feature\",\"default\":null},{\"name\":\"value\",\"type\":[\"null\",\"double\"],\"doc\":\"The value associated with this feature (if double)\",\"default\":null},{\"name\":\"dbxrefs\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Dbxref\",\"fields\":[{\"name\":\"accession\",\"type\":\"string\"},{\"name\":\"db\",\"type\":\"string\"}]}},\"doc\":\"Cross-references into other databases.\",\"default\":[]},{\"name\":\"parentIds\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"doc\":\"List of parent featureIds, for implementing feature hierachies/graphs.\",\"default\":[]},{\"name\":\"attributes\",\"type\":{\"type\":\"map\",\"values\":\"string\"},\"doc\":\"Additional feature info that doesn't fit into the standard fields above.\\n\\n   They are all encoded as (string, string) key-value pairs.\",\"default\":{}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Preferably unique ID for this Feature object */
  @Deprecated public java.lang.CharSequence featureId;
  /** The type of feature this is (aka, "track").

   Examples are "conservation", "centipede", "gene" */
  @Deprecated public java.lang.CharSequence featureType;
  /** The original source for this feature.

   Path/filename/URL and/or the file type (e.g., BED, GFF, etc.) */
  @Deprecated public java.lang.CharSequence source;
  /** The contig this feature is located on */
  @Deprecated public org.bdgenomics.formats.avro.Contig contig;
  /** Start coordinate on the contig */
  @Deprecated public java.lang.Long start;
  /** End coordinate on the contig */
  @Deprecated public java.lang.Long end;
  /** Strand information for this feature */
  @Deprecated public org.bdgenomics.formats.avro.Strand strand;
  /** The value associated with this feature (if double) */
  @Deprecated public java.lang.Double value;
  /** Cross-references into other databases. */
  @Deprecated public java.util.List<org.bdgenomics.formats.avro.Dbxref> dbxrefs;
  /** List of parent featureIds, for implementing feature hierachies/graphs. */
  @Deprecated public java.util.List<java.lang.CharSequence> parentIds;
  /** Additional feature info that doesn't fit into the standard fields above.

   They are all encoded as (string, string) key-value pairs. */
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> attributes;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Feature() {}

  /**
   * All-args constructor.
   */
  public Feature(java.lang.CharSequence featureId, java.lang.CharSequence featureType, java.lang.CharSequence source, org.bdgenomics.formats.avro.Contig contig, java.lang.Long start, java.lang.Long end, org.bdgenomics.formats.avro.Strand strand, java.lang.Double value, java.util.List<org.bdgenomics.formats.avro.Dbxref> dbxrefs, java.util.List<java.lang.CharSequence> parentIds, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> attributes) {
    this.featureId = featureId;
    this.featureType = featureType;
    this.source = source;
    this.contig = contig;
    this.start = start;
    this.end = end;
    this.strand = strand;
    this.value = value;
    this.dbxrefs = dbxrefs;
    this.parentIds = parentIds;
    this.attributes = attributes;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return featureId;
    case 1: return featureType;
    case 2: return source;
    case 3: return contig;
    case 4: return start;
    case 5: return end;
    case 6: return strand;
    case 7: return value;
    case 8: return dbxrefs;
    case 9: return parentIds;
    case 10: return attributes;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: featureId = (java.lang.CharSequence)value$; break;
    case 1: featureType = (java.lang.CharSequence)value$; break;
    case 2: source = (java.lang.CharSequence)value$; break;
    case 3: contig = (org.bdgenomics.formats.avro.Contig)value$; break;
    case 4: start = (java.lang.Long)value$; break;
    case 5: end = (java.lang.Long)value$; break;
    case 6: strand = (org.bdgenomics.formats.avro.Strand)value$; break;
    case 7: value = (java.lang.Double)value$; break;
    case 8: dbxrefs = (java.util.List<org.bdgenomics.formats.avro.Dbxref>)value$; break;
    case 9: parentIds = (java.util.List<java.lang.CharSequence>)value$; break;
    case 10: attributes = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'featureId' field.
   * Preferably unique ID for this Feature object   */
  public java.lang.CharSequence getFeatureId() {
    return featureId;
  }

  /**
   * Sets the value of the 'featureId' field.
   * Preferably unique ID for this Feature object   * @param value the value to set.
   */
  public void setFeatureId(java.lang.CharSequence value) {
    this.featureId = value;
  }

  /**
   * Gets the value of the 'featureType' field.
   * The type of feature this is (aka, "track").

   Examples are "conservation", "centipede", "gene"   */
  public java.lang.CharSequence getFeatureType() {
    return featureType;
  }

  /**
   * Sets the value of the 'featureType' field.
   * The type of feature this is (aka, "track").

   Examples are "conservation", "centipede", "gene"   * @param value the value to set.
   */
  public void setFeatureType(java.lang.CharSequence value) {
    this.featureType = value;
  }

  /**
   * Gets the value of the 'source' field.
   * The original source for this feature.

   Path/filename/URL and/or the file type (e.g., BED, GFF, etc.)   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * The original source for this feature.

   Path/filename/URL and/or the file type (e.g., BED, GFF, etc.)   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'contig' field.
   * The contig this feature is located on   */
  public org.bdgenomics.formats.avro.Contig getContig() {
    return contig;
  }

  /**
   * Sets the value of the 'contig' field.
   * The contig this feature is located on   * @param value the value to set.
   */
  public void setContig(org.bdgenomics.formats.avro.Contig value) {
    this.contig = value;
  }

  /**
   * Gets the value of the 'start' field.
   * Start coordinate on the contig   */
  public java.lang.Long getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * Start coordinate on the contig   * @param value the value to set.
   */
  public void setStart(java.lang.Long value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'end' field.
   * End coordinate on the contig   */
  public java.lang.Long getEnd() {
    return end;
  }

  /**
   * Sets the value of the 'end' field.
   * End coordinate on the contig   * @param value the value to set.
   */
  public void setEnd(java.lang.Long value) {
    this.end = value;
  }

  /**
   * Gets the value of the 'strand' field.
   * Strand information for this feature   */
  public org.bdgenomics.formats.avro.Strand getStrand() {
    return strand;
  }

  /**
   * Sets the value of the 'strand' field.
   * Strand information for this feature   * @param value the value to set.
   */
  public void setStrand(org.bdgenomics.formats.avro.Strand value) {
    this.strand = value;
  }

  /**
   * Gets the value of the 'value' field.
   * The value associated with this feature (if double)   */
  public java.lang.Double getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * The value associated with this feature (if double)   * @param value the value to set.
   */
  public void setValue(java.lang.Double value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'dbxrefs' field.
   * Cross-references into other databases.   */
  public java.util.List<org.bdgenomics.formats.avro.Dbxref> getDbxrefs() {
    return dbxrefs;
  }

  /**
   * Sets the value of the 'dbxrefs' field.
   * Cross-references into other databases.   * @param value the value to set.
   */
  public void setDbxrefs(java.util.List<org.bdgenomics.formats.avro.Dbxref> value) {
    this.dbxrefs = value;
  }

  /**
   * Gets the value of the 'parentIds' field.
   * List of parent featureIds, for implementing feature hierachies/graphs.   */
  public java.util.List<java.lang.CharSequence> getParentIds() {
    return parentIds;
  }

  /**
   * Sets the value of the 'parentIds' field.
   * List of parent featureIds, for implementing feature hierachies/graphs.   * @param value the value to set.
   */
  public void setParentIds(java.util.List<java.lang.CharSequence> value) {
    this.parentIds = value;
  }

  /**
   * Gets the value of the 'attributes' field.
   * Additional feature info that doesn't fit into the standard fields above.

   They are all encoded as (string, string) key-value pairs.   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAttributes() {
    return attributes;
  }

  /**
   * Sets the value of the 'attributes' field.
   * Additional feature info that doesn't fit into the standard fields above.

   They are all encoded as (string, string) key-value pairs.   * @param value the value to set.
   */
  public void setAttributes(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.attributes = value;
  }

  /** Creates a new Feature RecordBuilder */
  public static org.bdgenomics.formats.avro.Feature.Builder newBuilder() {
    return new org.bdgenomics.formats.avro.Feature.Builder();
  }
  
  /** Creates a new Feature RecordBuilder by copying an existing Builder */
  public static org.bdgenomics.formats.avro.Feature.Builder newBuilder(org.bdgenomics.formats.avro.Feature.Builder other) {
    return new org.bdgenomics.formats.avro.Feature.Builder(other);
  }
  
  /** Creates a new Feature RecordBuilder by copying an existing Feature instance */
  public static org.bdgenomics.formats.avro.Feature.Builder newBuilder(org.bdgenomics.formats.avro.Feature other) {
    return new org.bdgenomics.formats.avro.Feature.Builder(other);
  }
  
  /**
   * RecordBuilder for Feature instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Feature>
    implements org.apache.avro.data.RecordBuilder<Feature> {

    private java.lang.CharSequence featureId;
    private java.lang.CharSequence featureType;
    private java.lang.CharSequence source;
    private org.bdgenomics.formats.avro.Contig contig;
    private java.lang.Long start;
    private java.lang.Long end;
    private org.bdgenomics.formats.avro.Strand strand;
    private java.lang.Double value;
    private java.util.List<org.bdgenomics.formats.avro.Dbxref> dbxrefs;
    private java.util.List<java.lang.CharSequence> parentIds;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> attributes;

    /** Creates a new Builder */
    private Builder() {
      super(org.bdgenomics.formats.avro.Feature.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.bdgenomics.formats.avro.Feature.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.featureId)) {
        this.featureId = data().deepCopy(fields()[0].schema(), other.featureId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.featureType)) {
        this.featureType = data().deepCopy(fields()[1].schema(), other.featureType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.contig)) {
        this.contig = data().deepCopy(fields()[3].schema(), other.contig);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.start)) {
        this.start = data().deepCopy(fields()[4].schema(), other.start);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.end)) {
        this.end = data().deepCopy(fields()[5].schema(), other.end);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.strand)) {
        this.strand = data().deepCopy(fields()[6].schema(), other.strand);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.value)) {
        this.value = data().deepCopy(fields()[7].schema(), other.value);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dbxrefs)) {
        this.dbxrefs = data().deepCopy(fields()[8].schema(), other.dbxrefs);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.parentIds)) {
        this.parentIds = data().deepCopy(fields()[9].schema(), other.parentIds);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.attributes)) {
        this.attributes = data().deepCopy(fields()[10].schema(), other.attributes);
        fieldSetFlags()[10] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Feature instance */
    private Builder(org.bdgenomics.formats.avro.Feature other) {
            super(org.bdgenomics.formats.avro.Feature.SCHEMA$);
      if (isValidValue(fields()[0], other.featureId)) {
        this.featureId = data().deepCopy(fields()[0].schema(), other.featureId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.featureType)) {
        this.featureType = data().deepCopy(fields()[1].schema(), other.featureType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.source)) {
        this.source = data().deepCopy(fields()[2].schema(), other.source);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.contig)) {
        this.contig = data().deepCopy(fields()[3].schema(), other.contig);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.start)) {
        this.start = data().deepCopy(fields()[4].schema(), other.start);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.end)) {
        this.end = data().deepCopy(fields()[5].schema(), other.end);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.strand)) {
        this.strand = data().deepCopy(fields()[6].schema(), other.strand);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.value)) {
        this.value = data().deepCopy(fields()[7].schema(), other.value);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.dbxrefs)) {
        this.dbxrefs = data().deepCopy(fields()[8].schema(), other.dbxrefs);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.parentIds)) {
        this.parentIds = data().deepCopy(fields()[9].schema(), other.parentIds);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.attributes)) {
        this.attributes = data().deepCopy(fields()[10].schema(), other.attributes);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'featureId' field */
    public java.lang.CharSequence getFeatureId() {
      return featureId;
    }
    
    /** Sets the value of the 'featureId' field */
    public org.bdgenomics.formats.avro.Feature.Builder setFeatureId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.featureId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'featureId' field has been set */
    public boolean hasFeatureId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'featureId' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearFeatureId() {
      featureId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'featureType' field */
    public java.lang.CharSequence getFeatureType() {
      return featureType;
    }
    
    /** Sets the value of the 'featureType' field */
    public org.bdgenomics.formats.avro.Feature.Builder setFeatureType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.featureType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'featureType' field has been set */
    public boolean hasFeatureType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'featureType' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearFeatureType() {
      featureType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'source' field */
    public java.lang.CharSequence getSource() {
      return source;
    }
    
    /** Sets the value of the 'source' field */
    public org.bdgenomics.formats.avro.Feature.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.source = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'source' field has been set */
    public boolean hasSource() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'source' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearSource() {
      source = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'contig' field */
    public org.bdgenomics.formats.avro.Contig getContig() {
      return contig;
    }
    
    /** Sets the value of the 'contig' field */
    public org.bdgenomics.formats.avro.Feature.Builder setContig(org.bdgenomics.formats.avro.Contig value) {
      validate(fields()[3], value);
      this.contig = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'contig' field has been set */
    public boolean hasContig() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'contig' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearContig() {
      contig = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'start' field */
    public java.lang.Long getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public org.bdgenomics.formats.avro.Feature.Builder setStart(java.lang.Long value) {
      validate(fields()[4], value);
      this.start = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'start' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearStart() {
      start = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'end' field */
    public java.lang.Long getEnd() {
      return end;
    }
    
    /** Sets the value of the 'end' field */
    public org.bdgenomics.formats.avro.Feature.Builder setEnd(java.lang.Long value) {
      validate(fields()[5], value);
      this.end = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'end' field has been set */
    public boolean hasEnd() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'end' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearEnd() {
      end = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'strand' field */
    public org.bdgenomics.formats.avro.Strand getStrand() {
      return strand;
    }
    
    /** Sets the value of the 'strand' field */
    public org.bdgenomics.formats.avro.Feature.Builder setStrand(org.bdgenomics.formats.avro.Strand value) {
      validate(fields()[6], value);
      this.strand = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'strand' field has been set */
    public boolean hasStrand() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'strand' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearStrand() {
      strand = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'value' field */
    public java.lang.Double getValue() {
      return value;
    }
    
    /** Sets the value of the 'value' field */
    public org.bdgenomics.formats.avro.Feature.Builder setValue(java.lang.Double value) {
      validate(fields()[7], value);
      this.value = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'value' field has been set */
    public boolean hasValue() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'value' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearValue() {
      value = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'dbxrefs' field */
    public java.util.List<org.bdgenomics.formats.avro.Dbxref> getDbxrefs() {
      return dbxrefs;
    }
    
    /** Sets the value of the 'dbxrefs' field */
    public org.bdgenomics.formats.avro.Feature.Builder setDbxrefs(java.util.List<org.bdgenomics.formats.avro.Dbxref> value) {
      validate(fields()[8], value);
      this.dbxrefs = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'dbxrefs' field has been set */
    public boolean hasDbxrefs() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'dbxrefs' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearDbxrefs() {
      dbxrefs = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'parentIds' field */
    public java.util.List<java.lang.CharSequence> getParentIds() {
      return parentIds;
    }
    
    /** Sets the value of the 'parentIds' field */
    public org.bdgenomics.formats.avro.Feature.Builder setParentIds(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.parentIds = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'parentIds' field has been set */
    public boolean hasParentIds() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'parentIds' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearParentIds() {
      parentIds = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'attributes' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAttributes() {
      return attributes;
    }
    
    /** Sets the value of the 'attributes' field */
    public org.bdgenomics.formats.avro.Feature.Builder setAttributes(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.attributes = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'attributes' field has been set */
    public boolean hasAttributes() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'attributes' field */
    public org.bdgenomics.formats.avro.Feature.Builder clearAttributes() {
      attributes = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public Feature build() {
      try {
        Feature record = new Feature();
        record.featureId = fieldSetFlags()[0] ? this.featureId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.featureType = fieldSetFlags()[1] ? this.featureType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.source = fieldSetFlags()[2] ? this.source : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.contig = fieldSetFlags()[3] ? this.contig : (org.bdgenomics.formats.avro.Contig) defaultValue(fields()[3]);
        record.start = fieldSetFlags()[4] ? this.start : (java.lang.Long) defaultValue(fields()[4]);
        record.end = fieldSetFlags()[5] ? this.end : (java.lang.Long) defaultValue(fields()[5]);
        record.strand = fieldSetFlags()[6] ? this.strand : (org.bdgenomics.formats.avro.Strand) defaultValue(fields()[6]);
        record.value = fieldSetFlags()[7] ? this.value : (java.lang.Double) defaultValue(fields()[7]);
        record.dbxrefs = fieldSetFlags()[8] ? this.dbxrefs : (java.util.List<org.bdgenomics.formats.avro.Dbxref>) defaultValue(fields()[8]);
        record.parentIds = fieldSetFlags()[9] ? this.parentIds : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[9]);
        record.attributes = fieldSetFlags()[10] ? this.attributes : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
