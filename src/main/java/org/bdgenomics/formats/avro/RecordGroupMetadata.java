/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.bdgenomics.formats.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class RecordGroupMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RecordGroupMetadata\",\"namespace\":\"org.bdgenomics.formats.avro\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"Record group identifier.\",\"default\":null},{\"name\":\"sample\",\"type\":[\"null\",\"string\"],\"doc\":\"Name of the sample that the record group is from.\",\"default\":null},{\"name\":\"sequencingCenter\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"runDateEpoch\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"flowOrder\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"keySequence\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"library\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"predictedMedianInsertSize\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"platform\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"platformUnit\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** Record group identifier. */
  @Deprecated public java.lang.CharSequence name;
  /** Name of the sample that the record group is from. */
  @Deprecated public java.lang.CharSequence sample;
  @Deprecated public java.lang.CharSequence sequencingCenter;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public java.lang.Long runDateEpoch;
  @Deprecated public java.lang.CharSequence flowOrder;
  @Deprecated public java.lang.CharSequence keySequence;
  @Deprecated public java.lang.CharSequence library;
  @Deprecated public java.lang.Integer predictedMedianInsertSize;
  @Deprecated public java.lang.CharSequence platform;
  @Deprecated public java.lang.CharSequence platformUnit;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public RecordGroupMetadata() {}

  /**
   * All-args constructor.
   */
  public RecordGroupMetadata(java.lang.CharSequence name, java.lang.CharSequence sample, java.lang.CharSequence sequencingCenter, java.lang.CharSequence description, java.lang.Long runDateEpoch, java.lang.CharSequence flowOrder, java.lang.CharSequence keySequence, java.lang.CharSequence library, java.lang.Integer predictedMedianInsertSize, java.lang.CharSequence platform, java.lang.CharSequence platformUnit) {
    this.name = name;
    this.sample = sample;
    this.sequencingCenter = sequencingCenter;
    this.description = description;
    this.runDateEpoch = runDateEpoch;
    this.flowOrder = flowOrder;
    this.keySequence = keySequence;
    this.library = library;
    this.predictedMedianInsertSize = predictedMedianInsertSize;
    this.platform = platform;
    this.platformUnit = platformUnit;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return sample;
    case 2: return sequencingCenter;
    case 3: return description;
    case 4: return runDateEpoch;
    case 5: return flowOrder;
    case 6: return keySequence;
    case 7: return library;
    case 8: return predictedMedianInsertSize;
    case 9: return platform;
    case 10: return platformUnit;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: sample = (java.lang.CharSequence)value$; break;
    case 2: sequencingCenter = (java.lang.CharSequence)value$; break;
    case 3: description = (java.lang.CharSequence)value$; break;
    case 4: runDateEpoch = (java.lang.Long)value$; break;
    case 5: flowOrder = (java.lang.CharSequence)value$; break;
    case 6: keySequence = (java.lang.CharSequence)value$; break;
    case 7: library = (java.lang.CharSequence)value$; break;
    case 8: predictedMedianInsertSize = (java.lang.Integer)value$; break;
    case 9: platform = (java.lang.CharSequence)value$; break;
    case 10: platformUnit = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   * Record group identifier.   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * Record group identifier.   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'sample' field.
   * Name of the sample that the record group is from.   */
  public java.lang.CharSequence getSample() {
    return sample;
  }

  /**
   * Sets the value of the 'sample' field.
   * Name of the sample that the record group is from.   * @param value the value to set.
   */
  public void setSample(java.lang.CharSequence value) {
    this.sample = value;
  }

  /**
   * Gets the value of the 'sequencingCenter' field.
   */
  public java.lang.CharSequence getSequencingCenter() {
    return sequencingCenter;
  }

  /**
   * Sets the value of the 'sequencingCenter' field.
   * @param value the value to set.
   */
  public void setSequencingCenter(java.lang.CharSequence value) {
    this.sequencingCenter = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'runDateEpoch' field.
   */
  public java.lang.Long getRunDateEpoch() {
    return runDateEpoch;
  }

  /**
   * Sets the value of the 'runDateEpoch' field.
   * @param value the value to set.
   */
  public void setRunDateEpoch(java.lang.Long value) {
    this.runDateEpoch = value;
  }

  /**
   * Gets the value of the 'flowOrder' field.
   */
  public java.lang.CharSequence getFlowOrder() {
    return flowOrder;
  }

  /**
   * Sets the value of the 'flowOrder' field.
   * @param value the value to set.
   */
  public void setFlowOrder(java.lang.CharSequence value) {
    this.flowOrder = value;
  }

  /**
   * Gets the value of the 'keySequence' field.
   */
  public java.lang.CharSequence getKeySequence() {
    return keySequence;
  }

  /**
   * Sets the value of the 'keySequence' field.
   * @param value the value to set.
   */
  public void setKeySequence(java.lang.CharSequence value) {
    this.keySequence = value;
  }

  /**
   * Gets the value of the 'library' field.
   */
  public java.lang.CharSequence getLibrary() {
    return library;
  }

  /**
   * Sets the value of the 'library' field.
   * @param value the value to set.
   */
  public void setLibrary(java.lang.CharSequence value) {
    this.library = value;
  }

  /**
   * Gets the value of the 'predictedMedianInsertSize' field.
   */
  public java.lang.Integer getPredictedMedianInsertSize() {
    return predictedMedianInsertSize;
  }

  /**
   * Sets the value of the 'predictedMedianInsertSize' field.
   * @param value the value to set.
   */
  public void setPredictedMedianInsertSize(java.lang.Integer value) {
    this.predictedMedianInsertSize = value;
  }

  /**
   * Gets the value of the 'platform' field.
   */
  public java.lang.CharSequence getPlatform() {
    return platform;
  }

  /**
   * Sets the value of the 'platform' field.
   * @param value the value to set.
   */
  public void setPlatform(java.lang.CharSequence value) {
    this.platform = value;
  }

  /**
   * Gets the value of the 'platformUnit' field.
   */
  public java.lang.CharSequence getPlatformUnit() {
    return platformUnit;
  }

  /**
   * Sets the value of the 'platformUnit' field.
   * @param value the value to set.
   */
  public void setPlatformUnit(java.lang.CharSequence value) {
    this.platformUnit = value;
  }

  /** Creates a new RecordGroupMetadata RecordBuilder */
  public static org.bdgenomics.formats.avro.RecordGroupMetadata.Builder newBuilder() {
    return new org.bdgenomics.formats.avro.RecordGroupMetadata.Builder();
  }
  
  /** Creates a new RecordGroupMetadata RecordBuilder by copying an existing Builder */
  public static org.bdgenomics.formats.avro.RecordGroupMetadata.Builder newBuilder(org.bdgenomics.formats.avro.RecordGroupMetadata.Builder other) {
    return new org.bdgenomics.formats.avro.RecordGroupMetadata.Builder(other);
  }
  
  /** Creates a new RecordGroupMetadata RecordBuilder by copying an existing RecordGroupMetadata instance */
  public static org.bdgenomics.formats.avro.RecordGroupMetadata.Builder newBuilder(org.bdgenomics.formats.avro.RecordGroupMetadata other) {
    return new org.bdgenomics.formats.avro.RecordGroupMetadata.Builder(other);
  }
  
  /**
   * RecordBuilder for RecordGroupMetadata instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RecordGroupMetadata>
    implements org.apache.avro.data.RecordBuilder<RecordGroupMetadata> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence sample;
    private java.lang.CharSequence sequencingCenter;
    private java.lang.CharSequence description;
    private java.lang.Long runDateEpoch;
    private java.lang.CharSequence flowOrder;
    private java.lang.CharSequence keySequence;
    private java.lang.CharSequence library;
    private java.lang.Integer predictedMedianInsertSize;
    private java.lang.CharSequence platform;
    private java.lang.CharSequence platformUnit;

    /** Creates a new Builder */
    private Builder() {
      super(org.bdgenomics.formats.avro.RecordGroupMetadata.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.bdgenomics.formats.avro.RecordGroupMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sample)) {
        this.sample = data().deepCopy(fields()[1].schema(), other.sample);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sequencingCenter)) {
        this.sequencingCenter = data().deepCopy(fields()[2].schema(), other.sequencingCenter);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.runDateEpoch)) {
        this.runDateEpoch = data().deepCopy(fields()[4].schema(), other.runDateEpoch);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.flowOrder)) {
        this.flowOrder = data().deepCopy(fields()[5].schema(), other.flowOrder);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.keySequence)) {
        this.keySequence = data().deepCopy(fields()[6].schema(), other.keySequence);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.library)) {
        this.library = data().deepCopy(fields()[7].schema(), other.library);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.predictedMedianInsertSize)) {
        this.predictedMedianInsertSize = data().deepCopy(fields()[8].schema(), other.predictedMedianInsertSize);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.platform)) {
        this.platform = data().deepCopy(fields()[9].schema(), other.platform);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.platformUnit)) {
        this.platformUnit = data().deepCopy(fields()[10].schema(), other.platformUnit);
        fieldSetFlags()[10] = true;
      }
    }
    
    /** Creates a Builder by copying an existing RecordGroupMetadata instance */
    private Builder(org.bdgenomics.formats.avro.RecordGroupMetadata other) {
            super(org.bdgenomics.formats.avro.RecordGroupMetadata.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sample)) {
        this.sample = data().deepCopy(fields()[1].schema(), other.sample);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sequencingCenter)) {
        this.sequencingCenter = data().deepCopy(fields()[2].schema(), other.sequencingCenter);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.description)) {
        this.description = data().deepCopy(fields()[3].schema(), other.description);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.runDateEpoch)) {
        this.runDateEpoch = data().deepCopy(fields()[4].schema(), other.runDateEpoch);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.flowOrder)) {
        this.flowOrder = data().deepCopy(fields()[5].schema(), other.flowOrder);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.keySequence)) {
        this.keySequence = data().deepCopy(fields()[6].schema(), other.keySequence);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.library)) {
        this.library = data().deepCopy(fields()[7].schema(), other.library);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.predictedMedianInsertSize)) {
        this.predictedMedianInsertSize = data().deepCopy(fields()[8].schema(), other.predictedMedianInsertSize);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.platform)) {
        this.platform = data().deepCopy(fields()[9].schema(), other.platform);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.platformUnit)) {
        this.platformUnit = data().deepCopy(fields()[10].schema(), other.platformUnit);
        fieldSetFlags()[10] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'sample' field */
    public java.lang.CharSequence getSample() {
      return sample;
    }
    
    /** Sets the value of the 'sample' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setSample(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.sample = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'sample' field has been set */
    public boolean hasSample() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'sample' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearSample() {
      sample = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'sequencingCenter' field */
    public java.lang.CharSequence getSequencingCenter() {
      return sequencingCenter;
    }
    
    /** Sets the value of the 'sequencingCenter' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setSequencingCenter(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.sequencingCenter = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'sequencingCenter' field has been set */
    public boolean hasSequencingCenter() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'sequencingCenter' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearSequencingCenter() {
      sequencingCenter = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.description = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'description' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearDescription() {
      description = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'runDateEpoch' field */
    public java.lang.Long getRunDateEpoch() {
      return runDateEpoch;
    }
    
    /** Sets the value of the 'runDateEpoch' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setRunDateEpoch(java.lang.Long value) {
      validate(fields()[4], value);
      this.runDateEpoch = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'runDateEpoch' field has been set */
    public boolean hasRunDateEpoch() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'runDateEpoch' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearRunDateEpoch() {
      runDateEpoch = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'flowOrder' field */
    public java.lang.CharSequence getFlowOrder() {
      return flowOrder;
    }
    
    /** Sets the value of the 'flowOrder' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setFlowOrder(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.flowOrder = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'flowOrder' field has been set */
    public boolean hasFlowOrder() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'flowOrder' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearFlowOrder() {
      flowOrder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'keySequence' field */
    public java.lang.CharSequence getKeySequence() {
      return keySequence;
    }
    
    /** Sets the value of the 'keySequence' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setKeySequence(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.keySequence = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'keySequence' field has been set */
    public boolean hasKeySequence() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'keySequence' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearKeySequence() {
      keySequence = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'library' field */
    public java.lang.CharSequence getLibrary() {
      return library;
    }
    
    /** Sets the value of the 'library' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setLibrary(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.library = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'library' field has been set */
    public boolean hasLibrary() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'library' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearLibrary() {
      library = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'predictedMedianInsertSize' field */
    public java.lang.Integer getPredictedMedianInsertSize() {
      return predictedMedianInsertSize;
    }
    
    /** Sets the value of the 'predictedMedianInsertSize' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setPredictedMedianInsertSize(java.lang.Integer value) {
      validate(fields()[8], value);
      this.predictedMedianInsertSize = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'predictedMedianInsertSize' field has been set */
    public boolean hasPredictedMedianInsertSize() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'predictedMedianInsertSize' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearPredictedMedianInsertSize() {
      predictedMedianInsertSize = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'platform' field */
    public java.lang.CharSequence getPlatform() {
      return platform;
    }
    
    /** Sets the value of the 'platform' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setPlatform(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.platform = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'platform' field has been set */
    public boolean hasPlatform() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'platform' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearPlatform() {
      platform = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'platformUnit' field */
    public java.lang.CharSequence getPlatformUnit() {
      return platformUnit;
    }
    
    /** Sets the value of the 'platformUnit' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder setPlatformUnit(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.platformUnit = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'platformUnit' field has been set */
    public boolean hasPlatformUnit() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'platformUnit' field */
    public org.bdgenomics.formats.avro.RecordGroupMetadata.Builder clearPlatformUnit() {
      platformUnit = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    public RecordGroupMetadata build() {
      try {
        RecordGroupMetadata record = new RecordGroupMetadata();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.sample = fieldSetFlags()[1] ? this.sample : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.sequencingCenter = fieldSetFlags()[2] ? this.sequencingCenter : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.description = fieldSetFlags()[3] ? this.description : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.runDateEpoch = fieldSetFlags()[4] ? this.runDateEpoch : (java.lang.Long) defaultValue(fields()[4]);
        record.flowOrder = fieldSetFlags()[5] ? this.flowOrder : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.keySequence = fieldSetFlags()[6] ? this.keySequence : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.library = fieldSetFlags()[7] ? this.library : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.predictedMedianInsertSize = fieldSetFlags()[8] ? this.predictedMedianInsertSize : (java.lang.Integer) defaultValue(fields()[8]);
        record.platform = fieldSetFlags()[9] ? this.platform : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.platformUnit = fieldSetFlags()[10] ? this.platformUnit : (java.lang.CharSequence) defaultValue(fields()[10]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
